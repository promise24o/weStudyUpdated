<!DOCTYPE html>
<html>

<head>
    <title>Acadaboo Result</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.9.4/Chart.js"></script>
    <script script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-labels@1.1.0/src/chartjs-plugin-labels.min.js">
    </script>

    <style>
        body {
            background: linear-gradient(135deg, rgba(254, 238, 224, 1) 0%, rgba(243, 233, 255, 1) 46%, rgba(229, 247, 242, 1) 100%);
        }
        
        .logo {
            height: 80px;
            width: auto;
            padding: 0 10px 0 10px;
        }
        
        .result-card {
            border-radius: 25px;
            box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.35);
            overflow: hidden;
            background-color: #ffffff;
        }
        
        .card-container {
            border-radius: 25px;
            box-shadow: 10px 10px 15px rgba(0, 0, 0, 0.35);
            color: #B3B8CD;
            padding: 30px 0 0;
            position: relative;
            width: 350px;
            max-width: 100%;
            text-align: center;
            margin: 20px 0;
            overflow: hidden;
            /* background-color: #ffffff; */
        }
        
        .result-card {
            background-color: transparent;
        }
        
        .card-header {
            background-color: #191a3c!important;
            color: #ffffff;
        }
        
        .card-container .pro {
            color: #231E39;
            background-color: #FEBB0B;
            border-radius: 3px;
            font-size: 14px;
            font-weight: bold;
            padding: 3px 7px;
            position: absolute;
            top: 30px;
            left: 30px;
        }
        
        .card-container img {
            border: 1px solid #C400D7;
            border-radius: 50%;
            padding: 7px;
            height: 150px;
            width: 150px;
            text-align: center;
        }
        
        button.primary {
            background-color: #C400D7;
            border: 1px solid #C400D7;
            border-radius: 3px;
            color: #fff;
            font-family: Montserrat, sans-serif;
            font-weight: 500;
            padding: 10px 25px;
        }
        
        button.primary.ghost {
            background-color: transparent;
            color: #C400D7;
        }
        
        .skills {
            background-color: #141d3e;
            text-align: left;
            padding: 15px;
            margin-top: 30px;
        }
        
        .skills ul {
            list-style-type: none;
            margin: 0;
            padding: 0;
        }
        
        .skills ul li {
            border: 1px solid #141d3e;
            border-radius: 2px;
            display: inline-block;
            font-size: 18px;
            margin: 0 7px 7px 0;
            padding: 7px;
        }
    </style>
</head>

<body>
    <main class="container mt-5 mb-5 d-flex flex-column justify-content-center align-items-center">
        <div class="heading d-flex gap gap-3 justify-content-center
                align-items-center text-center mb-5">
            <img class="logo" height="0px" src="<%= logo %>" alt="Logo">
        </div>

        <% const totalGradePoints = gpa.reduce((acc, curr) => {
                const semesterCourses = curr.courses;
                const semesterGradePoint = semesterCourses.reduce((semAcc, semCurr) => {
                    return semAcc + (semCurr.unit * semCurr.grade);
                }, 0);
                return acc + semesterGradePoint;
            }, 0);
            const totalUnits = gpa.reduce((acc, curr) => {
                const semesterCourses = curr.courses;
                const semesterUnits = semesterCourses.reduce((semAcc, semCurr) => {
                    return semAcc + semCurr.unit;
                }, 0);
                return acc + semesterUnits;
            }, 0);
            const cgpa = (totalGradePoints / totalUnits).toFixed(1); 
        %>


            <div class="row mt-5">
                <div class="col-lg-12 mb-4 d-flex flex-column align-items-center">
                    <div class="row d-flex flex-row">
                        <div class="col-lg-6">
                            <div class="card-container">
                                <span class="pro">ACTIVE</span>
                                <img src="<%= profilePhoto ? profilePhoto : 'https://res.cloudinary.com/dbb2dkawt/image/upload/v1683819056/user_avatar_e02nii.png' %>" alt="Profile Photo">

                                <h3 class="text-dark fw-bolder">
                                    <%= firstname + ' ' + lastname %>
                                </h3>
                                <p>
                                    <%= education.institution %>
                                </p>
                                <h6>Department:
                                    <%= education.department %> | Course:
                                        <%= education.course_of_study %>
                                </h6>
                                <div class="skills">
                                    <h6>Result Details</h6>
                                    <ul>
                                        <li>Level:
                                            <%= level %>
                                        </li>
                                        <li>
                                            Semester:
                                            <% if(semester === "all") { %>
                                                1 & 2
                                                <% } else { %>
                                                    <%= semester %>
                                                        <% } %>
                                        </li>
                                        <li class="fw-bolder">GPA:
                                            <%= cgpa %>
                                        </li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <div class="col-lg-6">
                            <canvas id="myChart" width="600" height="550"></canvas>
                        </div>
                    </div>
                    <!-- <canvas id="myChart"></canvas> -->
                </div>
                <div class="col-lg-12">
                    <div class="result-body ">
                        <div class="row align-content-center">
                            <% gpa.forEach((semester, index) => { %>
                                <% const semesterCourses = semester.courses %>
                                    <!-- Get courses for the current semester -->
                                    <% if (semesterCourses.length) { %>
                                        <!-- Only display the table if there are courses for the semester -->
                                        <div class="col-lg-12">
                                            <div class="card result-card mb-4">
                                                <div class="card-header p-3">
                                                    <h4>
                                                        <%= index === 0 ? 'First' : 'Second' %> Semester</h4>
                                                    <!-- Display semester number -->
                                                    <p>Level
                                                        <%= semester.level %>
                                                    </p>
                                                </div>
                                                <div class="card-body">
                                                    <div class="table-responsive transaction-table">
                                                        <table class="table table-striped responsive-table">
                                                            <thead>
                                                                <tr>
                                                                    <th>Code</th>
                                                                    <th>Title</th>
                                                                    <th class="text-center">Credit Unit</th>
                                                                    <th class="text-center">Grade</th>
                                                                    <th class="text-center">Grade Point</th>
                                                                </tr>
                                                            </thead>
                                                            <tbody>
                                                                <% semesterCourses.forEach(course => { %>
                                                                    <!-- Loop through courses for the semester -->
                                                                    <tr>
                                                                        <td>
                                                                            <%= course.code %>
                                                                        </td>
                                                                        <!-- Display code -->
                                                                        <td>
                                                                            <%= course.title %>
                                                                        </td>
                                                                        <!-- Display title -->
                                                                        <td class="text-center">
                                                                            <%= course.unit %>
                                                                        </td>
                                                                        <!-- Display unit -->
                                                                        <td class="text-center">
                                                                            <%= course.symbol %>
                                                                        </td>
                                                                        <!-- Display symbol -->
                                                                        <td class="text-center">
                                                                            <%= course.unit * course.grade %>
                                                                        </td>
                                                                        <!-- Calculate and display grade point -->
                                                                    </tr>
                                                                    <% }) %>
                                                            </tbody>
                                                        </table>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <% } %>
                                            <% }) %>
                        </div>
                    </div>

                </div>
            </div>

    </main>
    <footer class="footer mt-auto py-3 text-center">
        <div class="container">
            <span class="text-muted">© <script>document.write(new Date().getFullYear())</script>
                    Acadaboo - GPA Result of <%= firstname + ' ' + lastname %>
                </span>
        </div>
    </footer>

    <% const gradeSymbols = gpa.reduce((acc, curr) => {
        const semesterCourses = curr.courses;
        const semesterGradeSymbols = semesterCourses.map(course => course.symbol);
        acc.push(...semesterGradeSymbols);
        return acc;
        }, []);
        const gradeCount = gradeSymbols.reduce((acc, grade) => {
            acc[grade] = (acc[grade] || 0) + 1;
            return acc;
        }, {});

        const semesterGradeSymbols = Object.keys(gradeCount);
        const numSemesterGradeSymbols = semesterGradeSymbols.length;
        const barColors = semesterGradeSymbols.map((symbol, index) => {
        const alpha = (numSemesterGradeSymbols - index) / numSemesterGradeSymbols;
        const red = parseInt((255 * index) / numSemesterGradeSymbols);
        const blue = parseInt(60 + (135 * index) / numSemesterGradeSymbols);
        const green = parseInt((135 * index) / numSemesterGradeSymbols);
        const color = `#${red.toString(16).padStart(2, '0')}${green.toString(16).padStart(2, '0')}${blue.toString(16).padStart(2, '0')}`;
        return `rgba(${parseInt(red)},${parseInt(green)},${parseInt(blue)},${alpha})`;
        });
    %>


        <script>
            var semesterGradeSymbols = <%- JSON.stringify(semesterGradeSymbols) %>;
            var gradeCount = <%- JSON.stringify(gradeCount) %>;
            var barColors = <%- JSON.stringify(barColors) %>;

            new Chart("myChart", {
                type: "doughnut",
                data: {
                    labels: semesterGradeSymbols,
                    datasets: [{
                        backgroundColor: barColors,
                        data: Object.values(gradeCount)
                    }]
                },
                options: {
                    title: {
                        display: true,
                        text: "Result Summary",
                        fontSize: 30
                    },
                    tooltips: {
                        callbacks: {
                            label: function(tooltipItem, data) {
                                var dataset = data.datasets[tooltipItem.datasetIndex];
                                var total = dataset.data.reduce(function(previousValue, currentValue, currentIndex, array) {
                                    return previousValue + currentValue;
                                });
                                var currentValue = dataset.data[tooltipItem.index];
                                var percentage = parseFloat(((currentValue / total) * 100).toFixed(2));
                                return percentage + '%';
                            }
                        }
                    },
                    elements: {
                        center: {
                            text: "5.90"
                        }
                    }
                }
            });
        </script>

</body>

</html>